{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/vdom/index.js","../src/render.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{   xxx  }}  \n\nfunction genProps(attrs) {\n    // {key:value,key:value,}\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') { // {name:id,value:'app'}\n            let styles = {}\n            attr.value.replace(/([^;:]+):([^;:]+)/g, function() {\n                styles[arguments[1]] = arguments[2];\n            })\n            attr.value = styles\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\n\nfunction gen(el) {\n    if (el.type == 1) {\n        return generate(el); // 如果是元素就递归的生成\n    } else {\n        let text = el.text; // {{}}\n        if (!defaultTagRE.test(text)) return `_v('${text}')`; // 说明就是普通文本\n\n        // 说明有表达式 我需要 做一个表达式和普通值的拼接 ['aaaa',_s(name),'bbb'].join('+)\n        // _v('aaaa'+_s(name) + 'bbb')\n        let lastIndex = defaultTagRE.lastIndex = 0;\n        let tokens = []; // <div> aaa{{bbb}} aaa </div>\n        let match;\n\n        // ，每次匹配的时候 lastIndex 会自动向后移动\n        while (match = defaultTagRE.exec(text)) { // 如果正则 + g 配合exec 就会有一个问题 lastIndex的问题\n            let index = match.index;\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length;\n        }\n        if(lastIndex < text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\n        }\n        return `_v(${tokens.join('+')})`; // webpack 源码 css-loader  图片处理\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children;\n    if (children) {\n        return children.map(item => gen(item)).join(',')\n    }\n    return false;\n}\n\n// _c(div,{},c1,c2,c3,c4)\nexport function generate(ast) {\n    let children = genChildren(ast)\n    let code = `_c('${ast.tag}',${\n        ast.attrs.length?genProps(ast.attrs) :'undefined'\n    }${\n        children? `,${children}` :''\n    })`\n    return code;\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 匹配标签名的  aa-xxx\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //  aa:aa-xxx  \nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //  此正则可以匹配到标签名 匹配到结果的第一个(索引第一个) [1]\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>  [1]\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\n\n// [1]属性的key   [3] || [4] ||[5] 属性的值  a=1  a='1'  a=\"\"\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的  />    > \nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{   xxx  }}  \n\n// vue3的编译原理比vue2里好很多，没有这么多正则了\n\nexport function parserHTML(html) { \n    // 可以不停的截取模板，直到把模板全部解析完毕 \n    let stack = [];\n    let root = null;\n    // 我要构建父子关系  \n    function createASTElement(tag,attrs,parent = null){\n        return {\n            tag,\n            type:1, // 元素\n            children:[],\n            parent,\n            attrs\n        }\n    }\n    function start(tag,attrs){ // [div,p]\n        // 遇到开始标签 就取栈中的最后一个作为父节点\n        let parent = stack[stack.length-1];\n        let element = createASTElement(tag,attrs,parent);\n        if(root == null){ // 说明当前节点就是根节点\n            root = element\n        }\n        if(parent){\n            element.parent = parent; // 跟新p的parent属性 指向parent\n            parent.children.push(element);\n        }\n        stack.push(element)\n    }\n    function end(tagName){\n        let endTag = stack.pop();\n        if(endTag.tag != tagName){\n            console.log('标签出错')\n        }\n    }\n    function text(chars){\n        let parent = stack[stack.length-1];\n        chars = chars.replace(/\\s/g,\"\");\n        if(chars){\n            parent.children.push({\n                type:2,\n                text:chars\n            })\n        }\n    }\n    function advance(len) {\n        html = html.substring(len);\n    }\n    function parseStartTag() {\n        const start = html.match(startTagOpen);  // 4.30 继续\n        if(start){\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length);\n            let end;\n            let attr;\n            while (!(end = html.match(startTagClose)) && ( attr = html.match(attribute))) { // 1要有属性 2，不能为开始的结束标签 <div>\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\n                advance(attr[0].length);\n            } // <div id=\"app\" a=1 b=2 >\n            if(end){\n                advance(end[0].length);\n            }\n            return match;\n        }\n        return false;\n    }\n    while (html) {\n        // 解析标签和文本   \n        let index = html.indexOf('<');\n        if (index == 0) {\n            // 解析开始标签 并且把属性也解析出来  </div>\n            const startTagMatch = parseStartTag()\n            if (startTagMatch) { // 开始标签\n                start(startTagMatch.tagName,startTagMatch.attrs);\n                continue;\n            }\n            let endTagMatch;\n            if (endTagMatch = html.match(endTag)) { // 结束标签\n                end(endTagMatch[1]);\n                advance(endTagMatch[0].length);\n                continue;\n            }\n        }\n        // 文本\n        if(index > 0){ // 文本\n            let chars = html.substring(0,index) //<div></div>\n            text(chars);\n            advance(chars.length)\n        }\n    }\n\n    return root;\n\n}\n\n\n\n//  <div id=\"app\">hello wolrd <span>hello</span></div> */}","import { generate } from \"./generate\";\r\nimport { parserHTML } from \"./parser\";\r\n\r\n\r\nexport function compileToFunction(template) {\r\n\r\n    // 1.将模板变成ast语法树\r\n    let ast = parserHTML(template);\r\n\r\n    // 代码优化 标记静态节点\r\n\r\n    // 2.代码生成\r\n    let code = generate(ast);  // 模板引擎的实现原理 都是 new Function + with  ejs jade handlerbar...\r\n    let render = new Function(`with(this){return ${code}}`);\r\n\r\n    return render;\r\n    // 1.编译原理\r\n    // 2.响应式原理 依赖收集\r\n    // 3.组件化开发 （贯穿了vue的流程）\r\n    // 4.diff算法 \r\n}\r\n\r\n","export function patch(el, vnode) {\r\n  // 删除老节点，根据vnode创建新节点，替换掉老节点\r\n\r\n  const elm = createElm(vnode); //根据虚拟节点创造了真实节点\r\n  const parentNode = el.parentNode;\r\n  parentNode.insertBefore(elm, el.nextSibing); //el.nextSibing不存在就是null,如果为null，insertBefore 就是appendChild\r\n  parentNode.removeChild(el)\r\n\r\n  //返回最新节点\r\n  return elm\r\n}\r\n\r\n// 面试有问 虚拟节点的实现 -> 如何将虚拟节点渲染成真实节点\r\nfunction createElm(vnode) {\r\n  let { tag, data, children, text, vm } = vnode;\r\n  // 我们让虚拟节点和真实节点做一个映射关系，后续某个虚拟节点更新了，我们可以跟踪到真实节点，并且更新真实节点\r\n  if (typeof tag === \"string\") {\r\n    vnode.el = document.createElement(tag);\r\n    // 如果有 data 属性，我们需要把data设置到元素上\r\n    updateProperties(vnode.el, data);\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child));\r\n    });\r\n  } else {\r\n    vnode.el = document.createTextNode(tag);\r\n  }\r\n  return vnode.el;\r\n}\r\n\r\n//后续写diff算法的时候 在进行完善, 没有考虑样式等\r\nfunction updateProperties(el, props = {}) {\r\n  for (let key in props) {\r\n    el.setAttribute(key, props[key]);\r\n  }\r\n}\r\n","import { patch } from \"./vdom/patch\";\r\n\r\nexport function mountComponent(vm) {\r\n  // debugger;\r\n  vm._update(vm._render());\r\n}\r\n\r\nexport function lifeCycleMixin(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    // 采用的是  先深度遍历 创建节点 （遇到节点就创造节点，递归创建）\r\n    const vm = this;\r\n    vm.$el = patch(vm.$el, vnode)\r\n  };\r\n}\r\n","export function isFunction(val){\r\n    return typeof val === 'function'\r\n}\r\n\r\n\r\nexport function isObject(val){\r\n    return typeof val == 'object' && val !== null\r\n}\r\n\r\n\r\nexport let isArray = Array.isArray\r\n\r\n\r\n\r\n","let oldArrayPrototype = Array.prototype   //获取数组的老的原型方法\r\n\r\nexport let arrayMethods = Object.create(oldArrayPrototype)  //让arrayMethods通过__proto__ 能获取到数组的方法\r\n\r\n// 只有这七个方法可以导致数组发生变化\r\nlet methods = [\r\n    'push',\r\n    'shift',\r\n    'pop',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\nmethods.forEach(method =>{\r\n    arrayMethods[method] = function(...args){\r\n        // console.log(\"数组方法进行重写操作\")\r\n        // 数组新增的 要看一下是不是对象，如果是对象，继续进行劫持 \r\n\r\n        // 需要调用数组原生逻辑\r\n        oldArrayPrototype[method].call(this,...args)\r\n\r\n        // todo 可以添加自己逻辑 函数劫持 切片\r\n\r\n        let inserted = null\r\n        let ob =  this.__ob__\r\n        switch(method) {\r\n            case 'splice':  //修改 删除 添加  arr.splice(1,0,24)\r\n                inserted = args.slice(2) //splice方法从第三个参数起 是增添的新数据\r\n                break;\r\n            case 'push':    \r\n            case 'unshift':\r\n                inserted = args; //调用push和unshift传递的参数就是新增的逻辑\r\n                break;\r\n        }\r\n\r\n        // inserted[] 遍历数组，看一下对它是否需要进行二次劫持\r\n        if(inserted) ob.observeArray(inserted)\r\n\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { isArray, isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n// 1. 每个对象都有一个 __proto__ 属性，它指向所属类的原型 fn.__proto__ = Function.prototype\r\n// 2. 每个原型上都有一个constructor属性指向函数本身 Function.prototype.constructor = Function\r\n\r\nclass Observe {\r\n  constructor(value) {\r\n    // 不让 __ob__ 被遍历到，不然会爆栈\r\n    // value.__ob__ = this; //我给对象和数组添加一个自定义属性 \r\n\r\n    Object.defineProperty(value,'__ob__',{\r\n      value:this,\r\n      enumerable:false, //标识这个属性不能被列举出来 不能被循环到\r\n    })\r\n\r\n\r\n    if (isArray(value)) {\r\n      // 更改数组原型方法\r\n      value.__proto__ = arrayMethods; //重写数组的方法\r\n\r\n      this.observeArray(value);\r\n    } else {\r\n      this.walk(value); //核心就是循环对象\r\n    }\r\n  }\r\n\r\n  //递归遍历数组，对数组内部的对象再次重写 [[]] [{}]\r\n  observeArray(data) {\r\n    data.forEach((item) => observe(item)); //数组里面如果是引用类型那么是响应式的\r\n  }\r\n\r\n  walk(data) {\r\n    // 要使用 definePrototype 重新定义\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\n\r\n// vue2 应用了defineProperty 需要一加载的时候就进行递归操作，所以耗性能，如果层次过深，也会浪费性能\r\n// 1.性能优化的原则：\r\n// 1）不要把所有的数据都防在data中，因为所有的数据都会增加get和set\r\n// 2）不要写数据的时候层次过深，尽量扁平化数据\r\n// 3）不要频繁获取数据 比如可以使用变量缓存\r\n// 4）如果数据不需要响应式，可以使用 Object.freeze 冻结属性\r\n\r\n// vue2 慢的主要原因在这个方法中\r\nfunction defineReactive(obj, key, value) {\r\n  observe(value); //递归进行观测数据，不管有多少层，都进行 defineProperty\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      return value; //闭包 此value会像上层的value进行查找\r\n    },\r\n    set(newValue) {\r\n      // 如果设置的是一个对象那么会再次进行劫持\r\n      if (newValue === value) return;\r\n      observe(newValue);\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(value) {\r\n  // 如果value不是对象，则不用观测了\r\n  if (!isObject(value)) {\r\n    return;\r\n  }\r\n\r\n  if(value.__ob__){\r\n    return; //一个对象不需要重新被观测 \r\n  }\r\n\r\n\r\n  // 需要对对象进行观测，最外层必须是一个 { } 不能是数组\r\n\r\n  // 如果一个数据已经被观测过了，就不要在进行观测了，用类来实现，我观测过就增加一个标识， 说明观测过了，在观测的时候可以先检测是否观测过，如果观测过了就跳过检测\r\n\r\n  return new Observe(value);\r\n}\r\n","import { observe } from \"./observe\"; //rollup-plugin-node-resolve\r\nimport { isFunction } from \"./utils\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\n// 取值的时候做代理 不是暴力的把_data属性赋予给vm,而且直接赋值会有命名冲突问题\r\nfunction proxy(vm, key, source) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue; //vm._data.message = newValue 这个 _data 就是传过来的值\r\n    },\r\n  });\r\n}\r\n\r\n// 数据的初始化\r\nfunction initData(vm) {\r\n  // 用户传入的数据\r\n  let data = vm.$options.data;\r\n\r\n  // 如果用户传递的是一个函数，则取函数的返回值作为对象，如果就是对象那就直接使用这个对象\r\n\r\n  // data 和 vm._data 引用的是同一个人， data 被劫持了， vm._data也被劫持\r\n  // vm._data 是为了外面可以拿到\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n  // 需要将 data 变成响应式的 Object.defineProperty 重写data中的所有属性\r\n  observe(data); //观测数据\r\n\r\n  // vm.message = vm._data.message  _data就是一个字符串\r\n  for (let key in data) {\r\n    proxy(vm, key, \"_data\"); //代理vm上的取值和设置值 和 vm._data没关系了\r\n  }\r\n\r\n  // data.arr.push(100);\r\n}\r\n","import { compileToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this;\r\n\r\n    // 把用户的选项放到vm上，这样在其他方法中就可以获取到options了\r\n    vm.$options = options; //为了后续扩展的方法都可以获取到 options 选项\r\n\r\n    // options中是用户传入的数据 el data\r\n    initState(vm);\r\n\r\n    if (vm.$options.el) {\r\n      // 要将数据挂载到页面上\r\n      // 现在数据已经被劫持了 数据变化需要更新视图 diff算法更新需要更新的部分\r\n      //vue -> template    jsx->(灵活)\r\n      // vue3 template 写起来性能会更高一些 内部做了很多优化\r\n      // template -> ast语法树 (用来描述语法的，描述语法本身的) -> 描述成一个树结构 -> 将代码重组js语法\r\n      // 模板编译原理（把template模板编译成render函数 -> 虚拟DOM -> diff算法比对虚拟DOM ）\r\n      // ast -> render返回 —> vnode ->生成真实dom\r\n      //        更新的时候再次调用render -> 新的 vnode -> 新旧对比 -> 更新真实dom\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n  //new Vue({el})  new Vue().$mount()\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    const opts = vm.$options;\r\n    el = document.querySelector(el); //获取真实的元素\r\n    vm.$el = el; //页面真实元素\r\n\r\n    //render > template > html\r\n    if (!opts.render) {\r\n      // 模板编译\r\n      let template = opts.template;\r\n      if (!template) {\r\n        template = el.outerHTML;\r\n      }\r\n      let render = compileToFunction(el.outerHTML);\r\n      opts.render = render;\r\n    }\r\n\r\n    // console.log(opts.render)\r\n\r\n    // 这里已经获取到了，一个 render函数的了\r\n\r\n    // debugger\r\n    mountComponent(vm)\r\n\r\n\r\n  };\r\n}\r\n","export function createElement(vm, tag, data = {}, ...children) {\r\n  //返回虚拟节点\r\n  return vnode(vm, tag, data, children, data.key, undefined);\r\n}\r\n\r\nexport function createText(vm, text) {\r\n  //返回虚拟节点\r\n  return vnode(vm, undefined, undefined, undefined, undefined, undefined);\r\n}\r\n\r\nfunction vnode(vm, tag, data, children, key, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    data,\r\n    children,\r\n    key,\r\n    text,\r\n  };\r\n}\r\n\r\n\r\n// vnode 其实就是一个对象，用来描述节点的，这个和ast区别是什么？\r\n// ast 描述语法的，他并没有用户自己的逻辑，只有语法解析出来的内容\r\n// vnode 他是描述dom结构的，可以自己去扩展属性 \r\n\r\n\r\n\r\n\r\n","import { isObject } from \"./utils\";\r\nimport { createElement, createText } from \"./vdom\";\r\n\r\nexport function renderMixin(Vue) {\r\n  Vue.prototype._c = function () {\r\n    //createElement 创建元素型节点\r\n    const vm = this\r\n    return createElement(vm,...arguments)\r\n  };\r\n  Vue.prototype._v = function (text) {\r\n    //创建文本的虚拟节点\r\n    const vm = this\r\n    return createText(vm,text)  //描述虚拟节点是属于哪个实例的\r\n  };\r\n  Vue.prototype._s = function (val) {\r\n    //JSON.stringify()\r\n    if (isObject(val)) return JSON.stringify(val);\r\n    return val;\r\n  };\r\n\r\n  Vue.prototype._render = function () {\r\n    const vm = this; //vm中有所有的数据\r\n    let { render } = vm.$options;\r\n    let vnode = render.call(vm);\r\n    return vnode;\r\n    console.log(vnode);\r\n  };\r\n}\r\n","import {initMixin} from './init'\r\nimport { lifeCycleMixin } from './lifecycle'\r\nimport { renderMixin } from './render'\r\n\r\n\r\n// vue要如何实现，原型模式，所有的功能都通过 原型拓展的方式来添加\r\nfunction Vue(options){\r\n    // console.log(options) \r\n    // 实现vue的初始化功能\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue)\r\nrenderMixin(Vue)\r\nlifeCycleMixin(Vue)\r\n\r\n\r\n// 导出Vue\r\nexport default Vue\r\n\r\n\r\n// 1.new Vue 会调用_init 方法进行初始化操作\r\n// 2.会将用户的选项放在 vm.$options 上\r\n// 3.会对当前属性上搜索有没有data数据， initState\r\n// 4.有 data 判断data是不是一个函数，如果是函数取返回值initData\r\n// 5.observe 去观测data中的数据 和 vm 没关系，说明data已经变成了响应式\r\n// 6.vm上像取值也能取到data中的数据 vm._data = data 这样用户能取到data了\r\n// 7.用户觉得有点麻烦， vm.xxx => vm._data\r\n\r\n\r\n// 8.如果更新对象不存在的属性，会导致视图不更新，如果是数组更新索引和长度不会触发更新\r\n// 9.如果是替换成一个新对象，新对象会被劫持；如果是数组存放新内容 push unshift() 新增的内容也会被劫持 \r\n// 通过 __ob__ 进行标识这个对象被监控过，（在vue中被监控的对象身上都有一个__ob__属性）\r\n// 10.如果你想改索引，可以使用 $set方法，内部就是splice()\r\n\r\n\r\n// 如果有el需要挂载到页面上\r\n\r\n"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","styles","value","replace","arguments","JSON","stringify","slice","gen","el","type","generate","text","test","lastIndex","tokens","match","exec","index","push","trim","join","genChildren","children","map","item","ast","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parserHTML","html","stack","root","createASTElement","parent","start","element","end","tagName","pop","console","log","chars","advance","len","substring","parseStartTag","indexOf","startTagMatch","endTagMatch","compileToFunction","template","render","Function","patch","vnode","elm","createElm","parentNode","insertBefore","nextSibing","removeChild","data","vm","document","createElement","updateProperties","forEach","child","appendChild","createTextNode","props","key","setAttribute","mountComponent","_update","_render","lifeCycleMixin","Vue","prototype","$el","isFunction","val","isObject","isArray","Array","oldArrayPrototype","arrayMethods","Object","create","methods","method","args","call","inserted","ob","__ob__","observeArray","Observe","constructor","defineProperty","enumerable","__proto__","walk","observe","keys","defineReactive","obj","get","set","newValue","initState","opts","$options","initData","proxy","source","_data","initMixin","_init","options","$mount","querySelector","outerHTML","undefined","createText","renderMixin","_c","_v","_s"],"mappings":"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"}