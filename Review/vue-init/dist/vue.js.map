{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/utils.js","../src/global-api/index.js","../src/observe/dep.js","../src/observe/scheduler.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifeCycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/render.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{   xxx  }}  \n\nfunction genProps(attrs) {\n    // {key:value,key:value,}\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') { // {name:id,value:'app'}\n            let styles = {}\n            attr.value.replace(/([^;:]+):([^;:]+)/g, function() {\n                styles[arguments[1]] = arguments[2];\n            })\n            attr.value = styles\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\n\nfunction gen(el) {\n    if (el.type == 1) {\n        return generate(el); // 如果是元素就递归的生成\n    } else {\n        let text = el.text; // {{}}\n        if (!defaultTagRE.test(text)) return `_v('${text}')`; // 说明就是普通文本\n\n        // 说明有表达式 我需要 做一个表达式和普通值的拼接 ['aaaa',_s(name),'bbb'].join('+)\n        // _v('aaaa'+_s(name) + 'bbb')\n        let lastIndex = defaultTagRE.lastIndex = 0;\n        let tokens = []; // <div> aaa{{bbb}} aaa </div>\n        let match;\n\n        // ，每次匹配的时候 lastIndex 会自动向后移动\n        while (match = defaultTagRE.exec(text)) { // 如果正则 + g 配合exec 就会有一个问题 lastIndex的问题\n            let index = match.index;\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length;\n        }\n        if(lastIndex < text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\n        }\n        return `_v(${tokens.join('+')})`; // webpack 源码 css-loader  图片处理\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children;\n    if (children) {\n        return children.map(item => gen(item)).join(',')\n    }\n    return false;\n}\n\n// _c(div,{},c1,c2,c3,c4)\nexport function generate(ast) {\n    let children = genChildren(ast)\n    let code = `_c('${ast.tag}',${\n        ast.attrs.length?genProps(ast.attrs) :'undefined'\n    }${\n        children? `,${children}` :''\n    })`\n    return code;\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 匹配标签名的  aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //  aa:aa-xxx  \r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //  此正则可以匹配到标签名 匹配到结果的第一个(索引第一个) [1]\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>  [1]\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n\r\n// [1]属性的key   [3] || [4] ||[5] 属性的值  a=1  a='1'  a=\"\"\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的  />    > \r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{   xxx  }}  \r\n\r\n// vue3的编译原理比vue2里好很多，没有这么多正则了\r\n\r\nexport function parserHTML(html) { \r\n    // 可以不停的截取模板，直到把模板全部解析完毕 \r\n    let stack = [];\r\n    let root = null;\r\n    // 我要构建父子关系  \r\n    function createASTElement(tag,attrs,parent = null){\r\n        return {\r\n            tag,\r\n            type:1, // 元素\r\n            children:[],\r\n            parent,\r\n            attrs\r\n        }\r\n    }\r\n    function start(tag,attrs){ // [div,p]\r\n        // 遇到开始标签 就取栈中的最后一个作为父节点\r\n        let parent = stack[stack.length-1];\r\n        let element = createASTElement(tag,attrs,parent);\r\n        if(root == null){ // 说明当前节点就是根节点\r\n            root = element\r\n        }\r\n        if(parent){\r\n            element.parent = parent; // 跟新p的parent属性 指向parent\r\n            parent.children.push(element);\r\n        }\r\n        stack.push(element)\r\n    }\r\n    function end(tagName){\r\n        let endTag = stack.pop();\r\n        if(endTag.tag != tagName){\r\n            console.log('标签出错')\r\n        }\r\n    }\r\n    function text(chars){\r\n        let parent = stack[stack.length-1];\r\n        chars = chars.replace(/\\s/g,\"\");\r\n        if(chars){\r\n            parent.children.push({\r\n                type:2,\r\n                text:chars\r\n            })\r\n        }\r\n    }\r\n    function advance(len) {\r\n        html = html.substring(len);\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);  // 4.30 继续\r\n        if(start){\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            let end;\r\n            let attr;\r\n            while (!(end = html.match(startTagClose)) && ( attr = html.match(attribute))) { // 1要有属性 2，不能为开始的结束标签 <div>\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\r\n                advance(attr[0].length);\r\n            } // <div id=\"app\" a=1 b=2 >\r\n            if(end){\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n        return false;\r\n    }\r\n    while (html) {\r\n        // 解析标签和文本   \r\n        let index = html.indexOf('<');\r\n        if (index == 0) {\r\n            // 解析开始标签 并且把属性也解析出来  </div>\r\n            const startTagMatch = parseStartTag()\r\n            if (startTagMatch) { // 开始标签\r\n                start(startTagMatch.tagName,startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            let endTagMatch;\r\n            if (endTagMatch = html.match(endTag)) { // 结束标签\r\n                end(endTagMatch[1]);\r\n                advance(endTagMatch[0].length);\r\n                continue;\r\n            }\r\n        }\r\n        // 文本\r\n        if(index > 0){ // 文本\r\n            let chars = html.substring(0,index) //<div></div>\r\n            text(chars);\r\n            advance(chars.length)\r\n        }\r\n    }\r\n\r\n    return root;\r\n\r\n}\r\n\r\n\r\n\r\n//  <div id=\"app\">hello wolrd <span>hello</span></div> */}","import { generate } from \"./generate\";\r\nimport { parserHTML } from \"./parser\";\r\n\r\n\r\nexport function compileToFunction(template) {\r\n\r\n    // 1.将模板变成ast语法树\r\n    let ast = parserHTML(template);\r\n\r\n    // 代码优化 标记静态节点\r\n\r\n    // 2.代码生成\r\n    let code = generate(ast);  // 模板引擎的实现原理 都是 new Function + with  ejs jade handlerbar...\r\n    let render = new Function(`with(this){return ${code}}`);\r\n\r\n    return render;\r\n    // 1.编译原理\r\n    // 2.响应式原理 依赖收集\r\n    // 3.组件化开发 （贯穿了vue的流程）\r\n    // 4.diff算法 \r\n}\r\n\r\n","export function isFunction(val) {\r\n  return typeof val == \"function\";\r\n}\r\n\r\nexport function isObject(val) {\r\n  return typeof val == \"object\" && val !== null;\r\n}\r\n\r\nexport let isArray = Array.isArray;\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n  callbacks.forEach((fn) => fn());\r\n  callbacks = [];\r\n  waiting = false;\r\n}\r\nexport function nextTick(fn) {\r\n  callbacks.push(fn);\r\n  if (!waiting) {\r\n    Promise.resolve().then(flushCallbacks);\r\n    waiting = true;\r\n  }\r\n}\r\n\r\n// export function nextTick(fn) {\r\n//   return Promise.resolve().then(fn);\r\n// }\r\n\r\n/**\r\n * 生命周期的合并策略\r\n * @param {*} parentVal\r\n * @param {*} childVal\r\n * @returns\r\n */\r\n\r\nlet strats = {}; //存放所有策略\r\n\r\nlet lifeCycle = [\"beforeCreate\", \"created\", \"beforeMount\", \"mounted\"];\r\n\r\n// 创建各生命周期的合并策略\r\nlifeCycle.forEach((hook) => {\r\n  strats[hook] = function (parentVal, childVal) {\r\n    // 儿子有值 需要进行合并\r\n    if (childVal) {\r\n      if (parentVal) {\r\n        // 父 子 都有值 ，用父和子拼接在一起，所以父有值就一定是数组\r\n        return parentVal.concat(childVal);\r\n      } else {\r\n        // 如果没值 就变成数组\r\n        // 注意 如果传入的生命周期函数是数组，已经是数组无需在包装成数组\r\n        if (isArray(childVal)) {\r\n          return childVal;\r\n        } else {\r\n          return [childVal];\r\n        }\r\n      }\r\n    } else {\r\n      //儿子没有值 无需合并 直接返回父亲即可\r\n      return parentVal;\r\n    }\r\n  };\r\n});\r\n\r\n// parentVal 为函数，childVal 为对象\r\nstrats.components = function (parentVal, childVal) {\r\n  // 继承：子类可以沿着链找到父亲的属性 childVal.__proto__ = parentVal\r\n  let res = Object.create(parentVal); //合并后产生一个新对象。不用原来的\r\n  if (childVal) {\r\n    for (let key in childVal) {\r\n      res[key] = childVal[key];\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * 对象合并 将 childVal合并到 parentVal 中\r\n * @param {*} parentVal\r\n * @param {*} childVal\r\n */\r\nexport function mergeOptions(parentVal, childVal) {\r\n  let options = {};\r\n  for (let key in parentVal) {\r\n    mergeFiled(key);\r\n  }\r\n  for (let key in childVal) {\r\n    // 当新值存在，老值不存在时，添加到老值中\r\n    if (!parentVal.hasOwnProperty(key)) {\r\n      mergeFiled(key);\r\n    }\r\n  }\r\n\r\n  // 合并当前key\r\n  function mergeFiled(key) {\r\n    // 设计模式 策略模式:获取当前key的合并策略 \r\n    let strat = strats[key];\r\n    // debugger\r\n    if (strat) {\r\n      // 合并两个值\r\n      options[key] = strat(parentVal[key], childVal[key]);\r\n    } else {\r\n      // 默认合并方法，优先使用新值覆盖老值\r\n      options[key] = childVal[key] || parentVal[key];\r\n    }\r\n  }\r\n  return options;\r\n}\r\n\r\n// console.log(mergeOptions({a:1},{b:1,a:2}))\r\n\r\nfunction makeMap(str) {\r\n  let tagList = str.split(\",\");\r\n  return function (tagName) {\r\n    return tagList.includes(tagName);\r\n  };\r\n}\r\n\r\nexport const isReservedTag = makeMap(\r\n  \"template,script,style,element,content,slot,link,meta,svg,view,button,\" +\r\n    \"a,div,img,image,text,span,input,switch,textarea,spinner,select,\" +\r\n    \"slider,slider-neighbor,indicator,canvas,\" +\r\n    \"list,cell,header,loading,loading-indicator,refresh,scrollable,scroller,\" +\r\n    \"video,web,embed,tabbar,tabheader,datepicker,timepicker,marquee,countdown\"\r\n);\r\n","import { isObject, mergeOptions } from \"../utils\";\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  // 全局属性 在每个组件初始化的时候 将这些属性放到每个组件上\r\n  Vue.options = {};\r\n  //存放全局组件的\r\n  Vue.options.components = {};\r\n  // Vue.component -> Vue.extend\r\n  // 在任何地方访问 vm.$options._base 都可以拿到 Vue\r\n  Vue.options._base = Vue;\r\n\r\n  // 为 vue 添加 mixin 静态方法\r\n  //  功能：存放mixin component filter directive 属性\r\n  Vue.mixin = function (options) {\r\n    this.options = mergeOptions(this.options, options);\r\n    console.log(\"打印mixin合并后的options\", this.options);\r\n    //返回this 提供链式调用\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 使用基础的Vue构造器 创造一个子类\r\n   * @param {*} opt\r\n   * @returns\r\n   */\r\n  Vue.extend = function (opt) {\r\n    // 父类 Vue即当前this\r\n    const Super = this;\r\n    // 创建子类Sub\r\n    const Sub = function (options) {\r\n      //创造一个组件 其实就是new 这个组件的类（组件初始化）\r\n      // 当new组件时，执行组件初始化\r\n      this._init(options);\r\n    };\r\n    // 子类继承父类\r\n    Sub.prototype = Object.create(Super.prototype); //继承原型方法\r\n    Sub.prototype.constructor = Sub; //Object.create 会产生一个新的实例作为子类的原型，此时 constructor 会指向错误\r\n\r\n    Sub.options = mergeOptions(Super.options, opt);\r\n    // Sub.mixin = Vue.mixin;\r\n\r\n    return Sub;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} id 组件名\r\n   * @param {*} definition 组件定义\r\n   */\r\n  // definition 可以传入对象或函数\r\n  Vue.component = function (id, definition) {\r\n    let name = definition.name || id;\r\n    definition.name = name;\r\n\r\n    // 如果传入的是对象，使用Vue.extend进行一次处理\r\n    if (isObject(definition)) {\r\n      definition = Vue.extend(definition);\r\n    }\r\n    // 将 definition 对象保存到全局。Vue.options.components\r\n    Vue.options.components[name] = definition;\r\n    console.log(Vue.options.components);\r\n  };\r\n\r\n  // Vue.filter = function (options) {};\r\n  // Vue.directive = function (options) {};\r\n}\r\n","let id = 0;\r\n\r\nclass Dep {\r\n  constructor() {\r\n    //要把watcher放到dep中\r\n    this.subs = [];\r\n    this.id = id++;\r\n  }\r\n\r\n  depend() {\r\n    Dep.target.addDep(this); //在watcher中调用dep的addSub方法\r\n  }\r\n  //addSub为每个数据依赖收集器添加需要被监听的watcher\r\n  addSub(watcher) {\r\n      //将当前watcher添加到数据依赖收集器中\r\n    this.subs.push(watcher); //让dep记住watcher\r\n  }\r\n  notify() {\r\n    this.subs.forEach((watcher) => watcher.update());\r\n  }\r\n}\r\n\r\nDep.target = null;\r\nexport default Dep;\r\n","import { nextTick } from \"../utils\";\r\n\r\nlet queue = []; //这里存放要更新的watcher\r\nlet has = {}; //用来存储已有的watcher的id\r\n\r\nfunction flushScheduleQueue() {\r\n  queue.forEach((watcher) => watcher.run());\r\n  queue = [];\r\n  has = {};\r\n  pending = false;\r\n}\r\n\r\nlet pending = false;\r\nexport function queueWatcher(watcher) {\r\n  // 一般情况下 写去重 可以采用这种方式\r\n  let id = watcher.id;\r\n//   debugger\r\n  if (has[id] == null) {\r\n    has[id] = true;\r\n    queue.push(watcher);\r\n    if (!pending) {\r\n      //防抖\r\n      nextTick(flushScheduleQueue);\r\n      pending = true;\r\n    }\r\n  }\r\n}\r\n","import Dep from \"./dep\";\r\nimport { queueWatcher } from \"./scheduler\";\r\nlet id = 0;\r\nclass Watcher {\r\n  constructor(vm, fn, cb, options) {\r\n    this.vm = vm;\r\n    this.fn = fn;\r\n    this.cb = cb;\r\n    this.options = options;\r\n    this.id = id++;\r\n    this.depsId = new Set();\r\n    this.deps = [];\r\n    /**\r\n     * 因为fn就是vm._update(vm._render()) ,所以就是页面渲染。下面代码意思赋值并调用\r\n     */\r\n    this.getter = fn; // fn就是页面渲染逻辑\r\n    this.get(); //表示上来后就做一次初始化\r\n  }\r\n\r\n  addDep(dep) {\r\n    let did = dep.id;\r\n    if (!this.depsId.has(did)) {\r\n      this.depsId.add(did);\r\n      this.deps.push(dep); //做了保存id的功能，并且让watcher记住dep\r\n      dep.addSub(this);\r\n    }\r\n  }\r\n\r\n  get() {\r\n    Dep.target = this;\r\n    this.getter();\r\n    Dep.target = null;\r\n  }\r\n\r\n  // 每次更新数据都会同步调用这个 update 方法，我可以将更新的逻辑缓存起来，等同步更新数据的逻辑执行完毕后，依次调用（去重的逻辑）\r\n  update() {\r\n      console.log(\"缓存更新\")\r\n      queueWatcher(this)\r\n    // console.log(\"update\");\r\n    // this.get();\r\n  }\r\n\r\n  run(){\r\n      console.log(\"真正执行更新\")\r\n      this.get()\r\n  }\r\n}\r\n\r\nexport default Watcher;\r\n","import { isObject, isReservedTag } from \"../utils\";\r\n\r\nfunction createComponent(vm, tag, data, children, key, Ctor) {\r\n  // console.log(vm, tag, data, children, \"组件\");\r\n  if (isObject(Ctor)) {\r\n    // 组件的定义一定是通过 Vue.extend 进行包裹的\r\n    Ctor = vm.$options._base.extend(Ctor);\r\n  }\r\n  data.hook = {\r\n    // 组件的生命周期\r\n    init(vnode) {\r\n      // vnode.componentInstance.$el -> 对应组件渲染完毕后的结果\r\n      let child = vnode.componentInstance = new Ctor({}); //我想获取组件的真实dom\r\n      child.$mount(); // 所以组件在走挂载的流程时 vm.$el 为null\r\n\r\n      // mount挂载完毕后 会产生一个真实节点，这个节点在 vm.$el上-》 对应的就是组件的真实内容\r\n    },\r\n    prepatch() {},\r\n    postpatch() {},\r\n    ///\r\n  };\r\n\r\n  // 每个组件 默认的名字内部都会给你拼接一下\r\n  // componentOptions 存放了一个重要的属性 Ctor\r\n  let componentVnode = vnode(vm, tag, data, undefined, key, undefined, {\r\n    Ctor,\r\n    children,\r\n    tag,\r\n  });\r\n  return componentVnode;\r\n}\r\n\r\n// 参数：_c('标签', {属性}, ...儿子)\r\nexport function createElement(vm, tag, data = {}, ...children) {\r\n  // 返回虚拟节点 _c('',{}....)\r\n  // 需要进行拓展  因为会传入自定义组件\r\n  // 如何区分是组件还是元素节点\r\n\r\n  if (!isReservedTag(tag)) {\r\n    //组件\r\n    // 获取组件的构造函数：之前已经保存到了全局 vm.$options.components 上\r\n    let Ctor = vm.$options.components[tag]; //组件的初始化就是 new 组件的构造函数\r\n    return createComponent(vm, tag, data, children, data.key, Ctor);\r\n  }\r\n  // 创建元素的虚拟节点\r\n  return vnode(vm, tag, data, children, data.key, undefined);\r\n}\r\n\r\nexport function createText(vm, text) {\r\n  // 返回虚拟节点\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\nfunction vnode(vm, tag, data, children, key, text, options) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    data,\r\n    children,\r\n    key,\r\n    text,\r\n    componentOptions: options,\r\n  };\r\n}\r\n\r\n// vnode 其实就是一个对象 用来描述节点的，这个和ast长的很像啊？\r\n// ast 描述语法的，他并没有用户自己的逻辑 , 只有语法解析出来的内容\r\n// vnode 他是描述dom结构的 可以自己去扩展属性\r\n\r\n/**\r\n * 判断两个虚拟节点是否是同一个虚拟节点\r\n * 逻辑 标签名与key都相同\r\n * @param {*} newVnode\r\n * @param {*} oldVnode\r\n * @returns\r\n */\r\nexport function isSameVnode(newVnode, oldVnode) {\r\n  return newVnode.tag === oldVnode.tag && newVnode.key == oldVnode.key;\r\n}\r\n","import { isSameVnode } from \".\";\r\n\r\nexport function patch(oldVnode, vnode) {\r\n  console.log(oldVnode, vnode, \"oldVnode\");\r\n\r\n  //   之前少了这个步骤 导致bug 无法排查\r\n  if (!oldVnode) {\r\n    return createElm(vnode); //产生一个组件的真实节点\r\n  }\r\n\r\n  const isRealElement = oldVnode.nodeType;\r\n\r\n  if (isRealElement) {\r\n    // 删除老节点 根据vnode创建新节点，替换掉老节点\r\n    const elm = createElm(vnode);\r\n    const parentNode = oldVnode.parentNode;\r\n    parentNode.insertBefore(elm, oldVnode.nextSibling);\r\n    parentNode.removeChild(oldVnode);\r\n    return elm; // 返回最新节点\r\n  } else {\r\n    // 不管怎么diff 最终想更新渲染 =》 dom操作里去\r\n\r\n    // 只比较同级，如果不一样，儿子就不用比对了， 根据当前节点，创建儿子 全部替换掉\r\n    // diff 算法如何实现？\r\n    if (!isSameVnode(oldVnode, vnode)) {\r\n      // 如果新旧节点 不是同一个，删除老的换成新的\r\n      return oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el);\r\n    }\r\n\r\n    // 文本直接更新即可，因为文本没有儿子\r\n    let el = (vnode.el = oldVnode.el); // 复用节点\r\n    if (!oldVnode.tag) {\r\n      // 文本了, 一个是文本 那么另一个一定也是文本\r\n      if (oldVnode.text !== vnode.text) {\r\n        return (el.textContent = vnode.text);\r\n      }\r\n    }\r\n    // 元素  新的虚拟节点\r\n    updateProperties(vnode, oldVnode.data);\r\n    // 是相同节点了，复用节点，在更新不一样的地方 （属性）\r\n\r\n    // 比较儿子节点\r\n    let oldChildren = oldVnode.children || [];\r\n    let newChildren = vnode.children || [];\r\n\r\n    // 情况1 ：老的有儿子 ， 新没儿子\r\n\r\n    if (oldChildren.length > 0 && newChildren.length == 0) {\r\n      el.innerHTML = \"\";\r\n      // 新的有儿子 老的没儿子 直接将新的插入即可\r\n    } else if (newChildren.length > 0 && oldChildren.length == 0) {\r\n      newChildren.forEach((child) => el.appendChild(createElm(child)));\r\n    } else {\r\n      // 新老都有儿子\r\n      updateChildren(el, oldChildren, newChildren);\r\n    }\r\n    return el;\r\n  }\r\n}\r\n\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n  // vue2中 如何做的diff算法\r\n\r\n  // vue内部做了优化 （能尽量提升性能，如果实在不行，在暴力比对）\r\n  // 1.在列表中新增和删除的情况\r\n\r\n  let oldStartIndex = 0;\r\n  let oldStartVnode = oldChildren[0];\r\n  let oldEndIndex = oldChildren.length - 1;\r\n  let oldEndVnode = oldChildren[oldEndIndex];\r\n\r\n  let newStartIndex = 0;\r\n  let newStartVnode = newChildren[0];\r\n  let newEndIndex = newChildren.length - 1;\r\n  let newEndVnode = newChildren[newEndIndex];\r\n\r\n  function makeKeyByIndex(children) {\r\n    let map = {};\r\n    children.forEach((item, index) => {\r\n      map[item.key] = index;\r\n    });\r\n    return map;\r\n  }\r\n\r\n  let mapping = makeKeyByIndex(oldChildren);\r\n\r\n  // diff算法的复杂度 是O(n)  比对的时候 指针交叉的时候 就是比对完成了\r\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n    if (!oldStartVnode) {\r\n      // 在指针移动的时候 可能元素已经被移动走了，那就跳过这一项\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n    } else if (!oldEndVnode) {\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n      // 头头比较\r\n      patch(oldStartVnode, newStartVnode); // 会递归比较子节点，同时比对这两个人的差异\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newStartVnode = newChildren[++newStartIndex];\r\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n      // 尾尾比较\r\n      patch(oldEndVnode, newEndVnode);\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newEndVnode = newChildren[--newEndIndex];\r\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n      // 头尾\r\n      patch(oldStartVnode, newEndVnode);\r\n      el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newEndVnode = newChildren[--newEndIndex];\r\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n      // 尾头\r\n      patch(oldEndVnode, newStartVnode);\r\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el); // 将尾部的插入到头部去\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newStartVnode = newChildren[++newStartIndex];\r\n    } else {\r\n      // 之前的逻辑都是考虑 用户一些特殊情况，但是有非特殊的，乱序排\r\n      let moveIndex = mapping[newStartVnode.key];\r\n      if (moveIndex == undefined) {\r\n        // 没有直接将节点插入到开头的前面\r\n        el.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n      } else {\r\n        // 有的话需要复用\r\n        let moveVnode = oldChildren[moveIndex]; // 找到复用的那个人，将他移动到前面去\r\n        patch(moveVnode, newStartVnode);\r\n        el.insertBefore(moveVnode.el, oldStartVnode.el);\r\n        oldChildren[moveIndex] = undefined; // 将移动的节点标记为空\r\n      }\r\n      newStartVnode = newChildren[++newStartIndex];\r\n    }\r\n  }\r\n  if (newStartIndex <= newEndIndex) {\r\n    // 新的多，那么就将多的插入进去即可\r\n    // 如果下一个是null 就是appendChild\r\n    let anchor =\r\n      newChildren[newEndIndex + 1] == null\r\n        ? null\r\n        : newChildren[newEndIndex + 1].el; // 参照物是固定的\r\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n      // 看一下 当前尾节点的下一个元素是否存在，如果存在则是插入到下一个元素的前面\r\n      // 这里可能是向前追加 可能是像后追加\r\n      el.insertBefore(createElm(newChildren[i]), anchor);\r\n    }\r\n  }\r\n  if (oldStartIndex <= oldEndIndex) {\r\n    // 老的多余的  ,需要清理掉，直接删除即可\r\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      let child = oldChildren[i]; // 因为child可能是undefined 所有要跳过空间点\r\n      child && el.removeChild(child.el);\r\n    }\r\n  }\r\n}\r\n\r\n// 给组件预留了 一个初始化流程 init\r\nfunction createComponent(vnode) {\r\n  let i = vnode.data;\r\n  if ((i = i.hook) && (i = i.init)) {\r\n    i(vnode);\r\n  }\r\n  if (vnode.componentInstance) {\r\n    // 说明是组件\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function createElm(vnode) {\r\n  let { tag, data, children, text, vm } = vnode;\r\n\r\n  if (typeof tag === \"string\") {\r\n    if (createComponent(vnode)) {\r\n      //返回一个组件的真实节点\r\n      return vnode.componentInstance.$el; // 对应的就是真实节点\r\n    }\r\n\r\n    // 先创建 id app\r\n    vnode.el = document.createElement(tag);\r\n    updateProperties(vnode, data);\r\n\r\n    //再去查找 id app 的儿子 对儿子进行创建\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child)); //有创建组件和元素的功能\r\n    });\r\n  } else {\r\n    //   创建文本的真实节点\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\n\r\nfunction updateProperties(vnode, oldProps = {}) {\r\n  // 这里的逻辑 可能是初次渲染，初次渲染 直接 用oldProps 给vnode的el赋值即可\r\n  // 更新逻辑 拿到老的props 和 vnode里面的data进行比对\r\n  let el = vnode.el; // dom真实的节点\r\n  let newProps = vnode.data || {};\r\n  // 新旧比对， 两个对象如何比对差异？\r\n  let newStyle = newProps.style || {};\r\n  let oldStyle = oldProps.style || {};\r\n\r\n  for (let key in oldStyle) {\r\n    // 老的样式有 新的没有，就把页面上的样式删除掉\r\n    if (!newStyle[key]) {\r\n      el.style[key] = \"\";\r\n    }\r\n  }\r\n  for (let key in newProps) {\r\n    //  直接用新的改掉老的就可以了\r\n    // 如果前后一样，浏览器会去检测\r\n    if (key == \"style\") {\r\n      for (let key in newStyle) {\r\n        // {style:{color:red}}\r\n        el.style[key] = newStyle[key];\r\n      }\r\n    } else {\r\n      el.setAttribute(key, newProps[key]);\r\n    }\r\n  }\r\n  for (let key in oldProps) {\r\n    if (!newProps[key]) {\r\n      el.removeAttribute(key);\r\n    }\r\n  }\r\n}\r\n","import Watcher from \"./observe/watcher\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\nexport function mountComponent(vm) {\r\n  //初始化流程\r\n  let updateComponent = () => {\r\n    vm._update(vm._render());\r\n  };\r\n\r\n  //每个组件都有一个 watcher 我们把这个watcher称之为渲染watcher\r\n  callHook(vm, \"beforeCreate\");\r\n  new Watcher(\r\n    vm,\r\n    updateComponent,\r\n    () => {\r\n      console.log(\"后续增添更新钩子函数 update\");\r\n      callHook(vm, \"created\");\r\n    },\r\n    true\r\n  );\r\n  callHook(vm, \"mounted\");\r\n}\r\n\r\nexport function lifeCycleMixin(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    //采用的是 先序深度遍历 创建节点（遇到节点就创造节点，递归创建）\r\n    const vm = this;\r\n    // vm.$el = patch(vm.$el, vnode);\r\n    let preVnode = vm._prevVnode;\r\n    // 第一次渲染 是根据虚拟节点 生成真实节点，替换掉原来的节点\r\n    vm._prevVnode = vnode;\r\n    // 如果是第二次 生成一个新得虚拟节点 ，和老的虚拟节点进行对比\r\n    if (!preVnode) {\r\n      // 没有节点就是初次渲染\r\n      vm.$el = patch(vm.$el, vnode);\r\n    } else {\r\n      vm.$el = patch(preVnode, vnode);\r\n    }\r\n  };\r\n}\r\n\r\nexport function callHook(vm, hook) {\r\n  let handlers = vm.$options[hook];\r\n  if (handlers) {\r\n    handlers &&\r\n      handlers.forEach((fn) => {\r\n        //生命周期的 this 永远指向实例\r\n        fn.call(vm);\r\n      });\r\n  }\r\n}\r\n","let oldArrayPrototype = Array.prototype;\r\n//让arrayMethods可以通过__proto__ 获取到数组的方法\r\nexport let arrayMethods = Object.create(oldArrayPrototype);\r\n\r\n//只有这7个方法可以导致数组发生变化\r\nlet methods = [\"push\", \"shift\", \"pop\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\r\n\r\nmethods.forEach((method) => {\r\n  arrayMethods[method] = function (...args) {\r\n    console.log(\"数组的方法进行重写操作\");\r\n    //数组 新增的属性 要看一下是不是对象，如果是对象，继续进行劫持\r\n    oldArrayPrototype[method].call(this, ...args);\r\n\r\n    // 通过__ob__ 进行标识这个对象被监控过  （在vue中被监控的对象身上都有一个__ob__ 这个属性）\r\n\r\n    let inserted = null;\r\n    //\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case \"splice\":\r\n        inserted = args.slice(2);\r\n        break;\r\n      case \"push\":\r\n      case \"unshift\":\r\n        inserted = args;\r\n        break;\r\n    }\r\n    // 看一下新增的属性是不是对象， 看是否需要进行劫持\r\n    if (inserted) ob.observeArray(inserted);\r\n    // 通过 ob 拿到dep，调用notify 触发watcher 做视图更新\r\n    ob.dep.notify();\r\n  };\r\n});\r\n","import { isArray, isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observer {\r\n  constructor(value) {\r\n    //可以调用 __ob__ 是因为这里进行了设置\r\n    // 不让__ob__ 被遍历到\r\n    // value.__ob__ = this; // 我给对象和数组添加一个自定义属性\r\n    Object.defineProperty(value, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false, // 标识这个属性不能被列举出来，不能被循环到\r\n    });\r\n\r\n    // 数组的情况  改写数组的原型链\r\n    if (isArray(value)) {\r\n      value.__proto__ = arrayMethods; //重写数组的方法\r\n      this.observeArray(value);\r\n    } else {\r\n      //对象的情况\r\n      // 核心就是循环对象\r\n      this.walk(value);\r\n    }\r\n  }\r\n\r\n  observeArray(data) {\r\n    //递归遍历数组 对数组内部的对象再次重写  [[]]  [{}]\r\n    data.forEach((item) => observe(item));\r\n  }\r\n\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\n\r\n//让数组里的引用类型都收集依赖   //[[[]],{}]\r\nfunction dependArray(value) {\r\n  for (let i = 0; i < value.length; i++) {\r\n    let current = value[i];\r\n    //current 上如果有__ob__，说明是对象，就让dep收集依赖，（只有对象上才有__ob__）\r\n    current.__ob__ && current.__ob__.dep.depend();\r\n    //如果内部还是数组继续递归处理\r\n    if (Array.isArray(current)) {\r\n      dependArray(current);\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineReactive(obj, key, value) {\r\n  // 递归进行观测数据\r\n  let childOb = observe(value);\r\n  //childOb 如果有值 那么就是数组或者对象\r\n\r\n  //每个属性都增加一个dep 闭包\r\n  let dep = new Dep();\r\n\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      if (Dep.target) {\r\n        // 对象属性的依赖收集\r\n        dep.depend();\r\n        // 取属性的时候 会对对应的值（对象本身和数组）进行依赖收集\r\n        if (childOb) {\r\n          // 让数组和对象也记住当前的watcher\r\n          childOb.dep.depend();\r\n          if (Array.isArray(value)) {\r\n            //可能是数组套数组的可能\r\n            dependArray(value);\r\n          }\r\n        }\r\n      }\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      if (newValue === value) return;\r\n      observe(newValue);\r\n      // console.log(\"修改\");\r\n      value = newValue;\r\n      // 拿到当前的dep里面的watcher依次执行\r\n      dep.notify();\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(value) {\r\n  // 如果不是对象就不用观测 写的有问题\r\n  if (!isObject(value)) {\r\n    return;\r\n  }\r\n\r\n  if (value.__ob__) {\r\n    return; //一个对象不需要重新被观测\r\n  }\r\n\r\n  return new Observer(value);\r\n}\r\n","import { observe } from \"./observe\"; // rollup-plugin-node-resolve\r\nimport { isFunction } from \"./utils.js\";\r\n\r\nexport function initState(vm) {\r\n  // 把用户的选项传递过来\r\n  const opts = vm.$options;\r\n\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, key, source) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;\r\n\r\n  // 这一步 把 data 也放在vm 上了\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n  //   需要将 data 变成响应式的\r\n  observe(data);\r\n\r\n  for(let key in data){\r\n    proxy(vm,key,'_data')\r\n  }\r\n\r\n  // console.log(data)\r\n  // data.arr.push(100);\r\n}\r\n","import { compileToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifeCycle\";\r\nimport { initState } from \"./state\";\r\nimport { mergeOptions, nextTick } from \"./utils\";\r\n\r\nexport function initMixin(Vue) {\r\n  // 在vue的原型上进行挂载\r\n  Vue.prototype._init = function (options) {\r\n    // 把用户的选项放到 vm 上，这样在其它方法中都可以获取到 options\r\n    const vm = this;\r\n    // 此时需要使用 options 与 mixin 合并后的全局 options 在进行一次合并\r\n    // vm.$options = options;\r\n    // 因为全局定义的内容会混合在当前的实例上 \r\n    // debugger\r\n    vm.$options = mergeOptions(vm.constructor.options,options);\r\n    \r\n    console.log(vm.$options)\r\n    // 传入数据 对数据进行操作\r\n    initState(vm);\r\n    if (vm.$options.el) {\r\n      // 将数据挂载到页面上（此时 数据已经被劫持）\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n\r\n  //new Vue({el})  new Vue().$mount\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    const opts = vm.$options;\r\n    //获取真实元素\r\n    el = document.querySelector(el);\r\n    vm.$el = el; //页面真实元素\r\n\r\n    //此处对 三种挂载方式进行进行判断\r\n    if (!opts.render) {\r\n      //模板编译\r\n      let template = opts.template;\r\n      if (!template) {\r\n        template = el.outerHTML;\r\n      }\r\n      let render = compileToFunction(template);\r\n      opts.render = render;\r\n    }\r\n    // console.log(opts.render);\r\n\r\n    //这里已经获取到了一个 render 函数\r\n    mountComponent(vm);\r\n  };\r\n\r\n  Vue.prototype.$nextTick = nextTick;\r\n}\r\n","import { isObject } from \"./utils\"\nimport { createElement, createText } from \"./vdom\"\n\nexport function renderMixin(Vue){\n    Vue.prototype._c = function () { // createElement 创建元素型的节点\n        const vm = this;\n        return createElement(vm,...arguments)\n    }\n    Vue.prototype._v = function (text) { // 创建文本的虚拟节点\n        const vm = this;\n        return createText(vm,text); // 描述虚拟节点是属于哪个实例的\n    }\n    Vue.prototype._s = function (val) { // JSON.stingfiy()\n        if(isObject(val)) return JSON.stringify(val);\n        return val;\n    }\n    Vue.prototype._render = function () {\n        const vm = this; // vm中有所有的数据 vm.xxx => vm._data.xxx\n        let {render} = vm.$options;\n        let vnode = render.call(vm);\n        return vnode;\n    }\n}","import { compileToFunction } from \"./compiler\";\r\nimport { initGlobalAPI } from \"./global-api\";\r\nimport { initMixin } from \"./init\";\r\nimport { lifeCycleMixin } from \"./lifeCycle\";\r\nimport { renderMixin } from \"./render\";\r\nimport { createElm, patch } from \"./vdom/patch\";\r\n\r\nfunction Vue(options) {\r\n  //这里调用原型上挂载的方法\r\n  this._init(options);\r\n}\r\n\r\n//只是把方法挂载到原型上去了 此处并没有执行\r\ninitMixin(Vue);\r\nrenderMixin(Vue);\r\nlifeCycleMixin(Vue);\r\ninitGlobalAPI(Vue); //初始化global Api\r\n\r\n// 先生成第一个虚拟节点\r\n// let vm1 = new Vue({\r\n//   data() {\r\n//     return { name: \"chu\" };\r\n//   },\r\n// });\r\n\r\n//将 模板 render1 生成为 render 函数\r\n\r\n/**\r\n * 测试用例\r\n * <div style=\"color:blue\">{{name}}</div>\r\n */\r\n\r\n// let render1 = compileToFunction(`<div>\r\n// <li key=\"A\">A</li>\r\n// <li key=\"B\">B</li>\r\n// <li key=\"C\">C</li>\r\n// <li key=\"D\">D</li>\r\n// </div>`);\r\n// //调用 render 函数产生虚拟节点\r\n// let oldVnode = render1.call(vm1);\r\n// //将虚拟节点生成真实节点\r\n// let el1 = createElm(oldVnode);\r\n// //将真实节点渲染到页面上\r\n// document.body.appendChild(el1);\r\n\r\n// //生成第二个虚拟节点\r\n// let vm2 = new Vue({\r\n//   data() {\r\n//     return { name: \"doraemon\" };\r\n//   },\r\n// });\r\n// let render2 = compileToFunction(`<div>\r\n// <li key=\"A\" style=\"color:red\">A</li>\r\n// <li key=\"B\" style=\"color:blue\">B</li>\r\n// <li key=\"C\" style=\"color:yellow\">C</li>\r\n// <li key=\"D\" style=\"color:pink\">D</li>\r\n// <li key=\"E\">E</li>\r\n// <li key=\"F\">F</li>\r\n// </div>`);\r\n// let newVnode = render2.call(vm2);\r\n\r\n// // 初始化完成显示 el1,2秒后移除 el1 显示 el2\r\n// setTimeout(()=>{\r\n//   // 比对新老虚拟节点的差异，尽可能复用原有节点，以提升渲染性能\r\n//   patch(oldVnode,newVnode)\r\n//   // let el2 = createElm(newVnode)\r\n//   // document.body.removeChild(el1)\r\n//   // document.body.appendChild(el2)\r\n// },2000)\r\n\r\n// 导出Vue\r\nexport default Vue;\r\n\r\n// 1、Vue.component 注册成全局组件，内部会自动调用 Vue.extend 方法，返回组件的构造函数\r\n// 2. 组件初始化的时候，会做一个合并 mergerOptions （自己的组件.__proto__ = 全局的组件）\r\n// 3. 内部会对模板进行编译操作， _c('组件的名字') 做筛查，如果是组件就创造一个组件的虚拟节点，还会判断Ctor ，如果是对象会调用Vue.extend ，所有的组件都是通过 Vue.extend 方法来实现的 （componentOptions 里面放着组件的所有内容，属性的实现，事件的实现，插槽的内容，Ctor）\r\n// 4.创建组件的真实节点（new Ctor 拿到组件的实例，并且调用组件的$mount 方法（会生成一个$el对应组件模板渲染后的结果）） vnode.componentInstance = new Ctor() vnode.componentInstance.$el => 组件渲染后的结果\r\n// 5.将组件的vnode.componentInstance.$el 插入到父标签中\r\n// 6.组件在 new Ctor() 时会进行组件的初始化，给组件再次添加一个独立的渲染 watcher (每个组件都有自己的watcher),更新时，只需要更新自己组件对应的渲染watcher (因为组件渲染时，组件对应的属性会收集自己的渲染watcher)\r\n\r\n"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","styles","value","replace","arguments","JSON","stringify","slice","gen","el","type","generate","text","test","lastIndex","tokens","match","exec","index","push","trim","join","genChildren","children","map","item","ast","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parserHTML","html","stack","root","createASTElement","parent","start","element","end","tagName","pop","console","log","chars","advance","len","substring","parseStartTag","indexOf","startTagMatch","endTagMatch","compileToFunction","template","render","Function","isFunction","val","isObject","isArray","Array","callbacks","waiting","flushCallbacks","forEach","fn","nextTick","Promise","resolve","then","strats","lifeCycle","hook","parentVal","childVal","concat","components","res","Object","create","key","mergeOptions","options","mergeFiled","hasOwnProperty","strat","makeMap","tagList","split","includes","isReservedTag","initGlobalAPI","Vue","_base","mixin","extend","opt","Super","Sub","_init","prototype","constructor","component","id","definition","Dep","subs","depend","target","addDep","addSub","watcher","notify","update","queue","has","flushScheduleQueue","run","pending","queueWatcher","Watcher","vm","cb","depsId","Set","deps","getter","get","dep","did","add","createComponent","data","Ctor","$options","init","vnode","child","componentInstance","$mount","prepatch","postpatch","componentVnode","undefined","createElement","createText","componentOptions","isSameVnode","newVnode","oldVnode","patch","createElm","isRealElement","nodeType","elm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","textContent","updateProperties","oldChildren","newChildren","innerHTML","appendChild","updateChildren","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeKeyByIndex","mapping","moveIndex","moveVnode","anchor","$el","document","createTextNode","oldProps","newProps","newStyle","style","oldStyle","setAttribute","removeAttribute","mountComponent","updateComponent","_update","_render","callHook","lifeCycleMixin","preVnode","_prevVnode","handlers","call","oldArrayPrototype","arrayMethods","methods","method","args","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","__proto__","walk","observe","keys","defineReactive","dependArray","current","obj","childOb","set","newValue","initState","opts","initData","proxy","source","_data","initMixin","querySelector","outerHTML","$nextTick","renderMixin","_c","_v","_s"],"mappings":"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"}